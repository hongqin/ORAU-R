# use long andn not-long categories
#library(e1071)
#library(pcurve);
gasch = read.csv("gasch00.tab", sep="\t", header=T );
row.names(gasch) = gasch[,1]
sub.g = gasch[, seq(4,176)]
sub.g[ is.na(sub.g) ] = 0; #this means log(mut/wt)=0, i.e. no change of expression
row.names(sub.g) = gasch[,1]
library(Heatplus); #load Heatplus package into R
data= t(sub.g) #transpose, because I want the experiments listed horizontally
#just for a quic demo
#data = t(sub.g[1:100,1:20]) #use a small subset for quick demo
#heatmap_2(data); # A simple heat map
#heatmap_2(data, legend = 1 ) #Add a figure legend
#heatmap_2(data, legend = 1, col = RGBColVec(64) ) #customerize the color
heatmap_2(data, legend = 1, col = rev(RGBColVec(64) )) #customerize the color again
tb = read.csv("4cities.csv", row.names=1);
d = as.dist(tb);
d
hclust(d)
?hclust
plot(hclust(d, method="average") )
setwd("~/Dropbox/courses.student.research.dp/bio386,2012Fall/lectures-and-labs/6.gene.expression/dist.matrix.and.clustering")
tb = read.csv("4cities.csv", row.names=1);
d = as.dist(tb);
d
hclust(d)
?hclust
plot(hclust(d, method="average") )
library(Heatplus); #load Heatplus package into R
library(adimpro)
library(pixmap)
read.image( "gaga.tif")
read.image( "gaga.JPG")
g = read.pnm("spelLogo.pbm")
setwd("~/Dropbox/courses.student.research.dp/bio386,2012Fall/lectures-and-labs/6.gene.expression/pics/spelman_logo")
g = read.pnm("spelLogo.pbm")
list.file()
list.files()
g = read.pnm("spelman.pbm")
logo = read.pnm("spelman.pbm")
str(logo)
logo = read.pnm("spelman.pbm")
str(logo)
logo = read.pnm("spelman.pbm")
m = matrix(logo@grey, logo@size[1], logo@size[2])
logo = read.pnm("spelman.pbm")
m = matrix(logo@grey, logo@size[1], logo@size[2])
m
image(m)
image(m)
dev.off()
image(m)
?image()
image(m, col="blue") #this is the original image
image(m, col=c("blue","white")) #this is the original image
image(m, col = RGBColVec(64) )
m2 = m[sample(1:g@size[1], g@size[1]), ]
image(m2, col=c("blue","white"))
m = t(matrix(logo@grey, logo@size[1], logo@size[2]))
image(m, col=c("blue","white")) #this is the original image
m = t(matrix(logo@grey, rev(logo@size[1]), logo@size[2]))
image(m, col=c("blue","white")) #this is the original image
logo = read.pnm("spelman.pbm")
m = t(matrix(logo@grey, logo@size[1], rev(logo@size[2])))
image(m, col=c("blue","white")) #this is the original image
# image(m, col = RGBColVec(64) ) #this is the original image
logo = read.pnm("spelman.pbm")
m = t(matrix(logo@grey, logo@size[1], rev(logo@size[2])))
image(m, col=c("blue","white")) #this is the original image
# image(m, col = RGBColVec(64) ) #this is the original image
logo = read.pnm("spelman.pbm")
m = t(matrix(logo@grey, logo@size[1], logo@size[2]))
image(m, col=c("blue","white")) #this is the original image
m = matrix(logo@grey, logo@size[1], logo@size[2])
image(m, col=c("blue","white")) #this is the original image
m2 = m[sample(1:g@size[1], g@size[1]), ]
image(m2, col=c("blue","white"))  #this is the shuffled image
h = hclust(dist(m2))
m3 = m2[h$order, ]
image(m3, col=c("blue","white"), "hclust result")
image(m3, col=c("blue","white"), main="hclust result")
mymethod = 'ward';
heatmap_2(m, do.dendro = c(FALSE, FALSE), legend = 1,
#legfrac = 10,
hclustfun = function(c) hclust( c, method= mymethod),
col = gray(0:100/100),
#main = "All experiments"
)
mymethod = 'ward';
heatmap_2(m, do.dendro = c(T, FALSE), legend = 1,
#legfrac = 10,
hclustfun = function(c) hclust( c, method= mymethod),
col = gray(0:100/100),
#main = "All experiments"
)
gray(10)
?gray
g = read.pnm("gsmall.pbm")
m = matrix(g@grey, g@size[1], g@size[2])
image(m, col=gray(0:10/10)
)
m = matrix(g@grey, g@size[1], g@size[2])
image(m, col=gray(0:10/10))
m = matrix(g@grey, g@size[1], g@size[2])
image(m, col=gray(0:10/10))
logo = read.pnm("spelman.pbm")
m = matrix(logo@grey, logo@size[1], logo@size[2])
image(m, col=gray(0:10/10), main="original") #this is the original image
logo = read.pnm("spelman.pbm")
m = matrix(logo@grey, logo@size[1], logo@size[2])
image(m, col=gray(0:10/10), main="original") #this is the original image
m2 = m[sample(1:g@size[1], g@size[1]), ]
image(m2, col=gray(0:10/10), main="shuffled")  #this is the shuffled image
h = hclust(dist(m2))
m3 = m2[h$order, ]
image(m3, col=gray(0:10/10), main="hclust result")
mymethod = 'ward';
heatmap_2(m, do.dendro = c(T, FALSE), legend = 1,
#legfrac = 10,
hclustfun = function(c) hclust( c, method= mymethod),
col = gray(0:10/10),
)
heatmap_2(m); #A simple heat map
heatmap_2(m, legend = 1 ) #Add a figure legend
library(Heatplus); #load Heatplus package into R
library(adimpro)
library(pixmap)
logo = read.pnm("spelman.pbm")
m = matrix(logo@grey, logo@size[1], logo@size[2])
image(m, col=gray(0:10/10), main="original") #this is the original image
m2 = m[sample(1:g@size[1], g@size[1]), ]
image(m2, col=gray(0:10/10), main="shuffled")  #this is the shuffled image
m2 = m[sample(1:g@size[1], g@size[1]), ]
image(m2, col=gray(0:10/10), main="shuffled")  #this is the shuffled image
h = hclust(dist(m2))
m3 = m2[h$order, ]
image(m3, col=gray(0:10/10), main="hclust result")
setwd("~/Dropbox/courses.student.research.dp/bio386,2012Fall/lectures-and-labs/6.gene.expression/pics/gaga")
library(Heatplus); #load Heatplus package into R
library(adimpro)
library(pixmap)
g = read.pnm("gsmall.pbm")
m = matrix(g@grey, g@size[1], g@size[2])
image(m, col=gray(0:10/10))
m2 = m[sample(1:g@size[1], g@size[1]), ]
image(m2, col=gray(0:10/10), main="shuffled")
h = hclust(dist(m2))
m3 = m2[h$order, ]
image(m3, col=gray(0:10/10), main="hclust result")
heatmap_2(m); #A simple heat map
library(Heatplus); #load Heatplus package into R
library(adimpro)
library(pixmap)
g = read.pnm("gsmall.pbm")
m = matrix(g@grey, g@size[1], g@size[2])
image(m, col=gray(0:10/10), main="original")
m2 = m[sample(1:g@size[1], g@size[1]), ]
image(m2, col=gray(0:10/10), main="shuffled")
h = hclust(dist(m2))
m3 = m2[h$order, ]
image(m3, col=gray(0:10/10), main="hclust result")
m2 = m[, sample(1:g@size[1], g@size[1])]
image(m2, col=gray(0:10/10), main="shuffled")
h = hclust(dist(m2))
m3 = m2[h$order, ]
image(m3, col=gray(0:10/10), main="hclust result")
str(h)
image(m, col=gray(0:10/10), main="original")
m2 = m[, sample(1:g@size[1], g@size[1])]
image(m2, col=gray(0:10/10), main="shuffled")
image(m, col=gray(0:10/10), main="original")
str(g)
library(Heatplus); #load Heatplus package into R
library(adimpro)
library(pixmap)
g = read.pnm("gsmall.pbm")
m = matrix(g@grey, g@size[1], g@size[2])
image(m, col=gray(0:10/10), main="original")
g
str(g)
m2 = m[, sample(1:g@size[2], g@size[2])]
image(m2, col=gray(0:10/10), main="shuffled")
h = hclust(dist(m2))
m3 = m2[h$order, ]
image(m3, col=gray(0:10/10), main="hclust result")
g = read.pnm("gsmall.pbm")
m = matrix(g@grey, g@size[1], g@size[2])
image(m, col=gray(0:10/10), main="original")
m2 = m[, sample(1:g@size[2], g@size[2])]
image(m2, col=gray(0:10/10), main="shuffled")
h = hclust(dist(m2))
m3 = m2[h$order, ]
image(m3, col=gray(0:10/10), main="hclust result")
g = read.pnm("gsmall.pbm")
m = matrix(g@grey, g@size[1], g@size[2])
image(m, col=gray(0:10/10), main="original")
m2 = m[, sample(1:g@size[2], g@size[2])]
image(m2, col=gray(0:10/10), main="shuffled")
# m2 = m[, sample(1:g@size[2], g@size[2])]
m2 = m[ sample(1:g@size[1], g@size[1]), ]
image(m2, col=gray(0:10/10), main="shuffled")
h = hclust(dist(m2))
m3 = m2[h$order, ]
image(m3, col=gray(0:10/10), main="hclust result")
g = read.pnm("gsmall.pbm")
m = matrix(g@grey, g@size[1], g@size[2])
image(m, col=gray(0:10/10), main="original")
# m2 = m[, sample(1:g@size[2], g@size[2])]
m2 = m[ sample(1:g@size[1], g@size[1]), ]
image(m2, col=gray(0:10/10), main="shuffled")
h = hclust(dist(m2))
m3 = m2[h$order, ]
image(m3, col=gray(0:10/10), main="hclust result")
m = matrix(g@grey, g@size[1], g@size[2])
image(m, col=gray(0:10/10), main="original")
m2 = m[ sample(1:g@size[1], g@size[1]), ]
image(m2, col=gray(0:10/10), main="shuffled")
h = hclust(dist(m2))
m3 = m2[h$order, ]
image(m3, col=gray(0:10/10), main="hclust result")
?image()
image(t(m))
