x = rnorm(100)
barplot(x)
?barplot
boxplot(x)
?segment
?segments
x = rnorm(100)
bp = barplot(x)
str(bp)
install.packages("igraph")
source("http://bioconductor.org/biocLite.R")
biocLite("GO.db")
library(GO.db)
library(igraph)
BP <- toTable(GOBPPARENTS)
BP
View(BP)
BP <- toTable(GOBPPARENTS)
CC <- toTable(GOCCPARENTS)
MF <- toTable(GOMFPARENTS)
View(CC)
View(MF)
g <- graph.data.frame( rbind(BP,CC,MF) )
fix(g)
terms <- toTable(GOTERM)[,2:5]
View(terms)
terms <- terms[ !duplicated(terms[,1]), ]
g <- graph.data.frame( rbind(BP,CC,MF), vertices=terms )
g.d = degree(g)
fix(g.d)
str(g.d)
head(g.d)
list.files()
setwd("~/demo/igraph")
list.files()
?list.files
list.files(path="continental_states")
states = read.table( "continental_states/states.tab", sep="\t")
View(states)
states = read.table( "continental_states/states.tab", sep="\s")
states = read.table( "continental_states/states.tab")
View(states)
?read.table
states = states[,1:2]
states = read.table( "continental_states/states.tab", colClass=c("character","character",NA))
states = states[,1:2]
View(states)
str(states)
g = graph.data.frame(states)
fix(g)
g.d = degree(g)
g.d
max(g.d)
g.d[g.d==max(g.d)]
?graph.data.frame
g = graph.data.frame(states, directed=F)
g.d = degree(g)
g.d[g.d==max(g.d)] #TN and MO have 8 bordering states
fix(g)
states = read.table("https://sites.google.com/site/hongqinorg/48states.txt?attredirects=0&d=1",
colClass=c("character","character"))
states = read.table("https://sites.google.com/site/hongqinorg/download/48states.txt?attredirects=0&d=1",
colClass=c("character","character"))
states = read.table("https://sites.google.com/site/hongqinorg/download/48states.txt?attredirects=0&d=1")
states = read.table( "continental_states/states.tab", colClass=c("character","character",NA))
states = states[,1:2]
g = graph.data.frame(states, directed=F)
g.d = degree(g)
g.d[g.d==max(g.d)] #TN and MO have 8 bordering states
help(packages=igraph)
help(package=igraph)
shortest.path(g)
shortest.paths(g)
states = states[,1:2]
g = graph.data.frame(states, directed=F)
g.degree = degree(g)
g.degree [g.degree == max(g.degree)] #TN and MO have 8 bordering states
g.sd.m = shortest.paths(g)
g.shortestpath.m = shortest.paths(g)
View(g.shortestpath.m)
str(g.shortestpath.m)
names = rownames(g.shortestpath.m)
names
names = sort( rownames(g.shortestpath.m) )
fix(names)
gsm = g.shortestpath.m[, sorted.names]
gsm = gsm[sorted.names, ]
g.shortestpath.m = shortest.paths(g)
str(g.shortestpath.m)
sorted.names = sort( rownames(g.shortestpath.m) )
gsm = g.shortestpath.m[, sorted.names]
gsm = gsm[sorted.names, ]
View(gsm)
states = read.table("https://docs.google.com/spreadsheet/ccc?key=0ArLJZixvTlU7dDI5c3dnTzdRX1dndzBORUk1UC0wYlE#gid=0")
states = read.table("https://docs.google.com/spreadsheet/ccc?key=0ArLJZixvTlU7dDI5c3dnTzdRX1dndzBORUk1UC0wYlE")
states = read.table("https://docs.google.com/spreadsheet/pub?key=0ArLJZixvTlU7dDI5c3dnTzdRX1dndzBORUk1UC0wYlE&single=true&gid=0&output=csv")
googleDoc = "https://docs.google.com/spreadsheet/pub?key=0ArLJZixvTlU7dDI5c3dnTzdRX1dndzBORUk1UC0wYlE&single=true&gid=0&range=sheet1&output=csv"
states = read.csv( googleDoc)
googleDoc = "https://docs.google.com/spreadsheet/pub?key=0ArLJZixvTlU7dDI5c3dnTzdRX1dndzBORUk1UC0wYlE&single=true&gid=0&range=sheet1&output=csv"
states = read.csv( googleDoc)
URL = "https://docs.google.com/spreadsheet/pub?key=0ArLJZixvTlU7dDI5c3dnTzdRX1dndzBORUk1UC0wYlE&single=true&gid=0&output=csv"
states = read.csv(URL)
read.table(URL)
require(RCurl)
URL = "https://docs.google.com/spreadsheet/pub?key=0ArLJZixvTlU7dDI5c3dnTzdRX1dndzBORUk1UC0wYlE&single=true&gid=0&output=csv"
states = read.csv(textConnection(getURL(URL)))
View(states)
states = read.csv(textConnection(getURL(URL)), colClass = c("character", "character"))
str(states)
head(states)
g = graph.data.frame(states, directed=F)
g.degree = degree(g)
g.degree [g.degree == max(g.degree)] #TN and MO have 8 bordering states
g.shortestpath.m = shortest.paths(g)
str(g.shortestpath.m)
sorted.names = sort( rownames(g.shortestpath.m) )
gsm = g.shortestpath.m[, sorted.names]
gsm = gsm[sorted.names, ]
View(gsm)
URL2 = "https://docs.google.com/spreadsheet/pub?key=0ArLJZixvTlU7dC1rTlRhTkw5UlY0eWZGT1JOVUVCWGc&single=true&gid=0&output=csv"
state.year.tb = read.csv(textConnection(getURL(URL2)), colClass = c("character", NA))
View(state.year.tb)
URL = "https://docs.google.com/spreadsheet/pub?key=0ArLJZixvTlU7dDI5c3dnTzdRX1dndzBORUk1UC0wYlE&single=true&gid=0&output=csv"
states = read.csv(textConnection(getURL(URL)), colClass = c("character", "character"), header=F)
View(states)
View(state.year.tb)
URL2 = "https://docs.google.com/spreadsheet/pub?key=0ArLJZixvTlU7dC1rTlRhTkw5UlY0eWZGT1JOVUVCWGc&single=true&gid=0&output=csv"
state.year.tb = read.csv(textConnection(getURL(URL2)), colClass = c("character", NA), header=F)
View(state.year.tb)
require(RCurl)
URL = "https://docs.google.com/spreadsheet/pub?key=0ArLJZixvTlU7dDI5c3dnTzdRX1dndzBORUk1UC0wYlE&single=true&gid=0&output=csv"
states = read.csv(textConnection(getURL(URL)), colClass = c("character", "character"))
View(states)
URL2 = "https://docs.google.com/spreadsheet/pub?key=0ArLJZixvTlU7dC1rTlRhTkw5UlY0eWZGT1JOVUVCWGc&single=true&gid=0&output=csv"
state.year.tb = read.csv(textConnection(getURL(URL2)), colClass = c("character", NA), header=F)
View(state.year.tb)
state.year.tb = read.csv(textConnection(getURL(URL2)), colClass = c("character", NA))
View(state.year.tb)
URL2 = "https://docs.google.com/spreadsheet/pub?key=0ArLJZixvTlU7dC1rTlRhTkw5UlY0eWZGT1JOVUVCWGc&single=true&gid=0&output=csv"
state.year.tb = read.csv(textConnection(getURL(URL2)), colClass = c("character", NA))
View(state.year.tb)
URL2 = "https://docs.google.com/spreadsheet/pub?key=0ArLJZixvTlU7dC1rTlRhTkw5UlY0eWZGT1JOVUVCWGc&single=true&gid=0&output=csv"
state.year.tb = read.csv(textConnection(getURL(URL2)), colClass = c("character", NA))
View(state.year.tb)
setwd("~/Dropbox/courses.student.research.dp/bio386,2012Fall/lectures-and-labs/6.gene.expression/pics-hclust-demo/gaga")
require(Heatplus); #load Heatplus package into R
require(adimpro)
require(pixmap)
g = read.pnm("gsmall.pbm")
m = matrix(g@grey, g@size[1], g@size[2])
image(m, col=gray(0:10/10), main="original")
m2 = m[sample(1:g@size[1], g@size[1]), ]
image(m2, col=gray(0:10/10), main="shuffled")
h = hclust(dist(m2))
m3 = m2[h$order, ]
image(m3, col=gray(0:10/10), main="hclust result")
heatmap_2(m); #A simple heat map
heatmap_2(m, legend = 1 ) #Add a figure legend
heatmap_2(m, legend = 1, col = RGBColVec(64) ) #customerize the color
?heatmap_2
heatmap_2(m, legend = 1, col = gray(0:10/10), do.denfro=c(T,F) ) #customerize the color
heatmap_2(m, legend = 1, col = gray(0:10/10), do.dendro=c(T,F) ) #customerize the color
heatmap_2(m, legend = 1, col = gray(0:10/10), do.dendro=c(T,F) ) #customerize the color
?heatmap_2
setwd("~/Dropbox/courses.student.research.dp/bio386,2012Fall/lectures-and-labs/6.gene.expression/abcde")
setwd("~/Dropbox/courses.student.research.dp/bio386,2012Fall/lectures-and-labs/6.gene.expression/abcde")
data = read.csv("abcde-expression.csv", row.names=1);
data = as.matrix(data);
#show the data in heatmap without clustering
heatmap_2(data,scale="none", legend=4, do.dendro=c(F,F), col=RGBColVec(64),
Rowv= NA, Colv = NA, main = "microarray:5 genes 10 expts "
);
#ask the students which genes share similar expression patterns?
heatmap_2(m, legend = 1, col = gray(0:10/10), do.dendro=c(F,F), Rowv=NA, Colv=NA ) #customerize the color
m2 = m[sample(1:g@size[1], g@size[1]), ]
image(m2, col=gray(0:10/10), main="shuffled")
g = read.pnm("gsmall.pbm")
m = matrix(g@grey, g@size[1], g@size[2])
image(m, col=gray(0:10/10), main="original")
m2 = m[sample(1:g@size[1], g@size[1]), ]
image(m2, col=gray(0:10/10), main="shuffled")
g = read.pnm("gsmall.pbm")
m = matrix(g@grey, g@size[1], g@size[2])
image(m, col=gray(0:10/10), main="original")
m2 = m[sample(1:g@size[1], g@size[1]), ]
image(m2, col=gray(0:10/10), main="shuffled")
image(m, col=gray(0:10/10), main="original")
require(Heatplus); #load Heatplus package into R
require(adimpro)
require(pixmap)
g = read.pnm("gsmall.pbm")
m = matrix(g@grey, g@size[1], g@size[2])
image(m, col=gray(0:10/10), main="original")
require(Heatplus); #load Heatplus package into R
require(adimpro)
require(pixmap)
g = read.pnm("gsmall.pbm")
m = matrix(g@grey, g@size[1], g@size[2])
image(m, col=gray(0:10/10), main="original")
setwd("~/Dropbox/courses.student.research.dp/bio386,2012Fall/lectures-and-labs/6.gene.expression/pics-hclust-demo/gaga")
setwd("~/Dropbox/courses.student.research.dp/bio386,2012Fall/lectures-and-labs/6.gene.expression/pics-hclust-demo/gaga")
require(Heatplus); #load Heatplus package into R
require(adimpro)
require(pixmap)
g = read.pnm("gsmall.pbm")
m = matrix(g@grey, g@size[1], g@size[2])
image(m, col=gray(0:10/10), main="original")
m2 = m[sample(1:g@size[1], g@size[1]), ]
image(m2, col=gray(0:10/10), main="shuffled")
h = hclust(dist(m2))
m3 = m2[h$order, ]
image(m3, col=gray(0:10/10), main="hclust result")
heatmap_2(m, legend = 1, col = gray(0:10/10), do.dendro=c(F,F), Rowv=NA, Colv=NA ) #customerize the color
heatmap_2(m, legend = 1, col = gray(0:50/10), do.dendro=c(F,F), Rowv=NA, Colv=NA ) #customerize the color
heatmap_2(m, legend = 1, col = gray(0:1), do.dendro=c(F,F), Rowv=NA, Colv=NA ) #customerize the color
heatmap_2(m, legend = 1, col = gray(0:5/5), do.dendro=c(F,F), Rowv=NA, Colv=NA ) #customerize the color
heatmap_2(m, legend = 1, col = gray(0:20/20), do.dendro=c(F,F), Rowv=NA, Colv=NA ) #customerize the color
heatmap_2(m3, legend = 1, col = gray(0:20/20), do.dendro=c(T,F),  Colv=NA ) #customerize the color
heatmap_2(m3, legend = 1, col = gray(0:20/20), do.dendro=c(T,T),  Rowv=NA ) #customerize the color
heatmap_2(m3, legend = 1, col = gray(0:20/20), do.dendro=c(F,T),  Rowv=NA ) #customerize the color
heatmap_2(m3, legend = 1, col = gray(0:20/20), do.dendro=c(T,F),  Colv=NA ) #customerize the color
heatmap_2(m3, legend = 1, col = gray(0:20/20), do.dendro=c(F,T),  Rowv=NA ) #customerize the color
heatmap_2(m, legend = 1, col = gray(0:20/20), do.dendro=c(F,F), Rowv=NA, Colv=NA ) #customerize the color
heatmap_2(m3, legend = 1, col = gray(0:20/20), do.dendro=c(F,F), Rowv=NA, Colv=NA ) #customerize the color
heatmap_2(m3, legend = 1, col = gray(0:20/20), do.dendro=c(T,F),  Colv=NA ) #cluster by rows
heatmap_2(m3); #A simple heat map
heatmap_2(m3); #A simple heat map
heatmap_2(m3, legend = 1 ) #Add a figure legend
heatmap_2(m3, legend = 1, col = gray(0:20/20), do.dendro=c(F,F), Rowv=NA, Colv=NA ) #customerize the color
h = hclust(dist(m2))
m3 = m2[h$order, ]
image(m3, col=gray(0:10/10), main="hclust result")
heatmap_2(m2); #A simple heat map
heatmap_2(m2, legend = 1 ) #Add a figure legend
heatmap_2(m2, legend = 1, col = gray(0:20/20), do.dendro=c(F,F), Rowv=NA, Colv=NA ) #customerize the color
heatmap_2(m2, legend = 1, col = gray(0:20/20), do.dendro=c(T,F),  Colv=NA ) #cluster by rows
heatmap_2(m2, legend = 1, col = gray(0:20/20), do.dendro=c(F,T),  Rowv=NA ) #customerize the color
heatmap_2(m2, legend = 1, col = gray(0:20/20), do.dendro=c(F,T),  Rowv=NA ) #cluster by columns
heatmap_2(m, legend = 1, col = gray(0:20/20), do.dendro=c(F,F), Rowv=NA, Colv=NA ) #customerize the color
heatmap_2(m2, legend = 1, col = gray(0:20/20), do.dendro=c(T,T) ) #cluster by columns
heatmap_2(m, legend = 1, col = gray(0:20/20), do.dendro=c(F,F), Rowv=NA, Colv=NA ) #customerize the color
heatmap_2(m2, legend = 1, col = gray(0:20/20), do.dendro=c(T,T) ) #cluster by columns
m = matrix(g@grey, g@size[1], g@size[2])
image(m, col=gray(0:10/10), main="original")
setwd("~/Dropbox/courses.student.research.dp/bio386,2012Fall/lectures-and-labs/6.gene.expression/pics-hclust-demo/gaga/gaga.hclust.demo")
require(Heatplus); #load Heatplus package into R
require(adimpro)
require(pixmap)
g = read.pnm("gsmall.pbm")
m = matrix(g@grey, g@size[1], g@size[2])
image(m, col=gray(0:10/10), main="original")
dev.off()
require(Heatplus); #load Heatplus package into R
require(adimpro)
require(pixmap)
g = read.pnm("gsmall.pbm")
m = matrix(g@grey, g@size[1], g@size[2])
image(m, col=gray(0:10/10), main="original")
require(Heatplus); #load Heatplus package into R
require(adimpro)
require(pixmap)
g = read.pnm("gsmall.pbm")
m = matrix(g@grey, g@size[1], g@size[2])
image(m, col=gray(0:10/10), main="original")
m2 = m[sample(1:g@size[1], g@size[1]), ]
image(m2, col=gray(0:10/10), main="shuffled")
h = hclust(dist(m2))
m3 = m2[h$order, ]
image(m3, col=gray(0:10/10), main="hclust result")
heatmap_2(m2, legend = 1, col = gray(0:20/20), do.dendro=c(F,F), Rowv=NA, Colv=NA ) #customerize the color
heatmap_2(m2, legend = 1, col = gray(0:20/20), do.dendro=c(F,F), Rowv=NA, Colv=NA ) #customerize the color
heatmap_2(m2, legend = 1, col = gray(0:20/20), do.dendro=c(T,F),  Colv=NA ) #cluster by rows
heatmap_2(m2, legend = 1, col = gray(0:20/20), do.dendro=c(F,T),  Rowv=NA ) #cluster by columns
heatmap_2(m, legend = 1, col = gray(0:20/20), do.dendro=c(F,F), Rowv=NA, Colv=NA ) #customerize the color
heatmap_2(m2, legend = 1 ) #Add a figure legend
heatmap_2(m2); #A simple heat map
heatmap_2(m2, legend = 1 ) #Add a figure legend
heatmap_2(m, legend = 1, col = gray(0:20/20), do.dendro=c(F,F), Rowv=NA, Colv=NA ) #customerize the color
heatmap_2(m2, legend = 1, col = gray(0:20/20), do.dendro=c(T,T) ) #cluster by columns
